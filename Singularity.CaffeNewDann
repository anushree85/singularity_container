#
# Ubuntu ML container
#

BootStrap: docker
From: nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04
IncludeCmd: false

%labels

Maintainer anushree ghosh
Date: 2019-02-08
cuda_driver unspecified

%help

A portable Ubuntu 16.04 environment with pre-built caffe.

%environment
    # set these environment variables
    export CUDA_ROOT=/usr/local/cuda
    export CUDA_HOME=/usr/local/cuda
    export PATH=$PATH:$CUDA_ROOT/bin
    export LD_LIBRARY_PATH=$CUDA_ROOT/lib64

%runscript
    # Check the current environment
    chk_nvidia_uvm=$(grep nvidia_uvm /proc/modules)
    if [ -z "$chk_nvidia_uvm" ]; then
      echo "Problem detected on the host: the Linux kernel module nvidia_uvm is not loaded"
    fi
    exec /bin/bash

%setup
    # Runs from outside the container during Bootstrap
    workdir=$(pwd)

%post
    # Runs within the container during Bootstrap

    # make lqcd filesystem mount points
    mkdir /scratch /data /lfstev /project /lqcdproj 

    # Set up some required environment defaults
    export LC_ALL=C
    export CUDA_HOME=/usr/local/cuda
    export CUDA_ROOT=/usr/local/cuda
    export PATH=/bin:/sbin:/usr/bin:/usr/sbin:${CUDA_HOME}/bin:$PATH
    export LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${CUDA_HOME}/extras/CUPTI/lib64
    
    # Install the necessary packages (from repo)
    apt-get update && apt-get install -y --no-install-recommends \
      autoconf \
      automake \
      bc \
      cmake \
      curl \
      g++ \
      gfortran \
      git \
      libatlas-base-dev \
      libatlas3-base \
      libblas-dev \
      libboost-all-dev \
      libcupti-dev \
      libcurl4-openssl-dev \
      libffi-dev \
      libfreetype6-dev \
      libgflags-dev \
      libgoogle-glog-dev \
      libgraphviz-dev \
      libhdf5-serial-dev \
      libibverbs-dev \
      libjpeg-dev \
      libleveldb-dev \
      liblcms2-dev \
      liblapack-dev \
      liblapacke-dev \
      liblmdb-dev \
      libopenblas-dev \
      libopenmpi-dev \
      libopencv-dev \
      libprotobuf-dev \
      libpng-dev \
      libsnappy-dev \
      libssl-dev \
      libxml2-dev \
      libtiff5-dev \
      libwebp-dev \
      libzmq3-dev \
      pkg-config \
      protobuf-compiler \
      graphviz \
      python3-dev \
      python3-pip \
      python3-pydot \
      python3-setuptools \
      python3-tk \
      python3-numpy \
      rsync \
      software-properties-common \
      time \
      unzip \
      vim \
      zip \
      wget \
      zlib1g-dev
      
      apt-get clean && \
      apt-get autoremove && \
      rm -rf /var/lib/apt/lists/*
      
       # Update to the latest pip (newer than repo)
    # pip
    python3 -m pip install --upgrade setuptools pip
    python3 -m pip install --no-cache-dir --upgrade tf-nightly-gpu tf-agents-nightly tfp-nightly tensorflow-datasets
    python3 -m pip install --no-cache-dir matplotlib seaborn scikit-image
    python3 -m pip install numpy
      
 # Caffe master branch
   ##### INSTALL CAFFE #####

     cd /opt/
    # to avoid "Problem with the SSL CA cert (path? access rights?)"
    update-ca-certificates
    git clone -b caffeNEW_DANN --depth 1 https://github.com/anushree85/caffe.git
    cd caffe/

    # install python packages for Caffe
    #pip install --upgrade pip
    cd python
    for req in $(cat requirements.txt)
      do 
         python3 -m pip install --no-cache-dir $req
    done
    cd ..
    export PYTHONPATH=/opt/caffe/build/tools/caffe/python
    # make Caffe
    mkdir build
    cd build/
    #cmake -DUSE_CUDNN=1 -DUSE_NCCL=1 ..
    cmake -DUSE_CUDNN=1 ..
    make
    make pycaffe
   
    %runscript
    exec /opt/caffe/build/tools/caffe
  #  /sbin/ldconfig
